{"version":3,"sources":["components/Keyboard.tsx","App.tsx","index.tsx"],"names":["Keyboard","state","key","handleDocumentKeyPressed","event","setState","document","addEventListener","this","removeEventListener","className","React","PureComponent","App","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,IAAK,IAFT,EAaEC,yBAA2B,SAACC,GAC1B,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAd/B,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,4BAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,4BAV/C,oBAiBE,WACE,IAAQD,EAAQM,KAAKP,MAAbC,IAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGR,EAAG,mCAC4BA,EAD5B,KAEA,kCAzBd,GAA8BS,IAAMC,eCHvBC,EAAgB,kBAC3B,cAAC,EAAD,K,MCCFC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.42c72d18.chunk.js","sourcesContent":["import React, { ReactNode } from 'react';\n\ninterface State {\n  key: string;\n}\n\nexport class Keyboard extends React.PureComponent {\n  state: State = {\n    key: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleDocumentKeyPressed);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleDocumentKeyPressed);\n  }\n\n  handleDocumentKeyPressed = (event: KeyboardEvent) => {\n    this.setState({ key: event.key });\n  };\n\n  render(): ReactNode {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {key\n            ? `The last pressed key is [${key}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Keyboard } from './components/Keyboard';\n\nexport const App: React.FC = () => (\n  <Keyboard />\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}